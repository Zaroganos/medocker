networks:
  medocker_network:
    driver: bridge
services:
  keycloak:
    command:
    - start-dev
    - --import-realm
    depends_on:
    - postgres
    environment:
      KC_DB: postgres
      KC_DB_PASSWORD: keycloak_password
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_HOSTNAME: keycloak.localhost
      KC_PROXY: edge
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: change-me-please
    image: quay.io/keycloak/keycloak:21.1.1
    labels:
    - traefik.enable=true
    - traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)
    - traefik.http.routers.keycloak.entrypoints=websecure
    - traefik.http.routers.keycloak.tls=true
    - traefik.http.services.keycloak.loadbalancer.server.port=8080
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/keycloak/realms:/opt/keycloak/data/import
  mariadb:
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    image: mariadb:10.6
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/mariadb:/var/lib/mysql
  nextcloud:
    depends_on:
    - mariadb
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_HOST: mariadb
      MYSQL_PASSWORD: nextcloud_password
      MYSQL_USER: nextcloud
      NEXTCLOUD_ADMIN_PASSWORD: admin
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_TRUSTED_DOMAINS: localhost nextcloud.localhost
    image: nextcloud:25.0.3
    labels:
    - traefik.enable=true
    - traefik.http.routers.nextcloud.rule=Host(`nextcloud.localhost`)
    - traefik.http.routers.nextcloud.entrypoints=websecure
    - traefik.http.routers.nextcloud.tls=true
    - traefik.http.services.nextcloud.loadbalancer.server.port=80
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/nextcloud:/var/www/html
  openemr:
    depends_on:
    - mariadb
    environment:
      MYSQL_DATABASE: openemr
      MYSQL_HOST: mariadb
      MYSQL_PASS: openemr_password
      MYSQL_ROOT_PASS: root_password
      MYSQL_USER: openemr
      OE_PASS: pass
      OE_USER: admin
    image: openemr/openemr:7.0.0
    labels:
    - traefik.enable=true
    - traefik.http.routers.openemr.rule=Host(`openemr.localhost`)
    - traefik.http.routers.openemr.entrypoints=websecure
    - traefik.http.routers.openemr.tls=true
    - traefik.http.services.openemr.loadbalancer.server.port=80
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/openemr/sites:/var/www/localhost/htdocs/openemr/sites
    - ./data/openemr/logs:/var/log/apache2
  portainer:
    image: portainer/portainer-ce:2.16.2
    labels:
    - traefik.enable=true
    - traefik.http.routers.portainer.rule=Host(`portainer.localhost`)
    - traefik.http.routers.portainer.entrypoints=websecure
    - traefik.http.routers.portainer.tls=true
    - traefik.http.services.portainer.loadbalancer.server.port=9000
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
  postgres:
    environment:
      POSTGRES_PASSWORD: postgres_password
    image: postgres:14.5
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/postgres:/var/lib/postgresql/data
  traefik:
    command:
    - --api.dashboard=true
    - --providers.docker=true
    - --providers.docker.exposedByDefault=false
    - --entrypoints.web.address=:80
    - --entrypoints.websecure.address=:443
    - --certificatesresolvers.myresolver.acme.email=admin@example.com
    - --certificatesresolvers.myresolver.acme.storage=/acme.json
    - --certificatesresolvers.myresolver.acme.tlschallenge=true
    - --entrypoints.web.http.redirections.entrypoint.to=websecure
    image: traefik:v2.9
    labels:
    - traefik.enable=true
    - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
    - traefik.http.routers.traefik.service=api@internal
    - traefik.http.routers.traefik.entrypoints=websecure
    - traefik.http.routers.traefik.tls=true
    - traefik.http.routers.traefik.middlewares=traefik-auth
    networks:
    - medocker_network
    ports:
    - 80:80
    - 443:443
    - 8888:8080
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./data/traefik/acme.json:/acme.json
    - ./data/traefik/config:/etc/traefik/config
  vaultwarden:
    depends_on:
    - postgres
    environment:
      ADMIN_TOKEN: change-me-please
      DATABASE_URL: postgresql://vaultwarden:vaultwarden_password@postgres:5432/vaultwarden
      DOMAIN: https://vaultwarden.${system.domain}
      OIDC_ALLOW_SIGNUP: 'true'
      OIDC_AUTHORIZATION_ENDPOINT: https://keycloak.localhost/realms/medocker/protocol/openid-connect/auth
      OIDC_CLIENT_ID: vaultwarden
      OIDC_CLIENT_SECRET: vaultwarden-secret
      OIDC_DISPLAY_NAME: Keycloak
      OIDC_ENABLED: 'true'
      OIDC_ISSUER_URL: https://keycloak.localhost/realms/medocker
      OIDC_TOKEN_ENDPOINT: https://keycloak.localhost/realms/medocker/protocol/openid-connect/token
      OIDC_USERINFO_ENDPOINT: https://keycloak.localhost/realms/medocker/protocol/openid-connect/userinfo
      SIGNUPS_ALLOWED: 'false'
      WEBSOCKET_ENABLED: 'true'
      WEB_VAULT_ENABLED: 'true'
    image: vaultwarden/server:latest
    labels:
    - traefik.enable=true
    - traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.localhost`)
    - traefik.http.routers.vaultwarden.entrypoints=websecure
    - traefik.http.routers.vaultwarden.tls=true
    - traefik.http.services.vaultwarden.loadbalancer.server.port=80
    - traefik.http.routers.vaultwarden-ws.rule=Host(`vaultwarden.localhost`) && Path(`/notifications/hub`)
    - traefik.http.routers.vaultwarden-ws.entrypoints=websecure
    - traefik.http.routers.vaultwarden-ws.tls=true
    - traefik.http.services.vaultwarden-ws.loadbalancer.server.port=3012
    networks:
    - medocker_network
    restart: unless-stopped
    volumes:
    - ./data/vaultwarden:/data
version: '3.8'
volumes:
  keycloak_data:
    driver: local
  mariadb_data:
    driver: local
  nextcloud_data:
    driver: local
  openemr_logs:
    driver: local
  openemr_sites:
    driver: local
  portainer_data:
    driver: local
  postgres_data:
    driver: local
  traefik_data:
    driver: local
  vaultwarden_data:
    driver: local
